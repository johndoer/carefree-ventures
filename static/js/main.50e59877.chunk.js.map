{"version":3,"sources":["whatsapp.svg","SearchbarComponent.js","Navbar.js","Display.js","Footer.js","App.js","serviceWorker.js","rootReducer.js","index.js"],"names":["module","exports","SearchbarComponent","store","useStore","dispatch","useDispatch","classNameA","useSelector","state","searchbar","opened","currentApp","app","color","appsList","className","onSubmit","e","preventDefault","type","payload","target","children","value","console","log","getState","name","placeholder","Navbar","App","storeNavItems","navItems","showSearchBar","toggleSearchBar","toggleCartAction","useEffect","sp","scrollPos","scrollPosition","document","querySelector","style","top","window","scrollTo","title","addMenuBtn","item","scrollY","appsArray","apps","indexOf","map","navItem","i","fn","icon","index","key","onClick","iconButton","to","id","Display","handlePlus","innerHTML","innerWidth","innerHeight","el","w","h","f","parseInt","getComputedStyle","fontSize","itemsList","n","push","Footer","src","logo","alt","exact","path","component","Boolean","location","hostname","match","initialState","current","initialSearchState","currentSearchTerm","rootReducer","combineReducers","action","nextAppIndex","length","nextApp","newState","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,mKCG9BC,EAAqB,WAE9B,IAUGC,EAAQC,cACRC,EAAWC,cAEXC,EADaC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,UACvB,qBAAuB,SAClDC,EAAaJ,aAAY,SAAAC,GAAK,OAAIA,EAAMI,IAAID,cAC5CE,EAAQN,aAAY,SAAAC,GAAK,OAAIA,EAAMI,IAAIE,SAASH,GAAYE,SAC5DE,EAAS,UAAMF,EAAN,wBAEf,OACK,yBAAKE,UAAWT,GACd,yBAAKS,UAAWA,GACd,yBAAKA,UAAU,aACb,0BAAMC,SAnBI,SAACC,GACrBA,EAAEC,iBACFd,EAJa,CAAEe,KAAK,uBAAwBC,QAIlBH,EAAEI,OAAOC,SAAS,GAAGC,QAC/CN,EAAEI,OAAOC,SAAS,GAAGC,MAAQ,GAC7BC,QAAQC,IAAI,SAASvB,EAAMwB,cAgBf,2BAAOX,UAAU,kBAAkBI,KAAK,OAAOQ,KAAK,eAAeC,YAAY,sBAC/E,qCAAU,uBAAGb,UAAU,4CAAb,gBCqFTc,EA5GA,WAGb,IAAMzB,EAAWC,cAEXyB,EAAMvB,aAAY,SAAAC,GAAK,OAAIA,EAAMI,OACjCD,EAAamB,EAAInB,WACjBoB,EAAgBD,EAAIhB,SAASH,GAAYqB,SAMzCC,EAAgB,WAAQ7B,EAAS8B,MACjCC,EAAmB,WAAQ,MAAO,CAAEhB,KAAM,oBAC1Ce,EAAkB,WAAQ,MAAO,CAAEf,KAAM,qBAShDiB,qBAAU,WAIT,IAAMC,EAAKP,EAAIhB,SAASgB,EAAInB,YAAY2B,UAClCC,EAAkBF,GAAW,EAGzBG,SAASC,cAAc,YAC/BC,MAAMC,IAAM,IACdC,OAAOC,SAAS,EAAGN,GAInBC,SAASM,MAAQhB,EAAInB,aAClB,CAACmB,IAGJ,IAAMiB,EAAa,SAACC,EAAMrC,GAM1BP,EA5BO,CAAEe,KAAM,kBAAmBC,QAAQ,CAACkB,UA4BpBM,OAAOK,QA5BwBtC,WAAWmB,EAAInB,cA+BnE,IAAMuC,EAAYpB,EAAIhB,SAASqC,KACmB,WAAjDD,EAAUA,EAAUE,QAAQzC,GAAc,GAC5CP,EArCoC,CAAEe,KAAM,oBAuC5Cf,EAtCoC,CAAEe,KAAM,OAwC7Cf,EA9CO,CAAEe,KAAK,mBAAoBC,QAAS,QAwDrCY,EAAWD,GAAiBA,EAAcsB,KAAI,SAACC,EAASC,GAC5D,GAAyB,kBAAbD,EAAsB,CAAC,IAE7BE,EADGC,EAAQH,EAARG,KAEP,OAAOA,GACL,IAAK,OACHD,EAAKT,EACL,MACF,IAAK,gBACHS,EAAKrB,EACL,MACF,IAAK,SACHqB,EAAKvB,EACL,MACF,QACEuB,EAAK,KAET,OAxBe,SAACA,EAAIC,EAAMC,GAC5B,OACE,0BAAMC,IAAKD,EAAO3C,UAAU,mBAAoB6C,QAAUJ,GACxD,uBAAGzC,UAAU,4CAA6C0C,IAqBpDI,CAAWL,EAAIC,EAAMF,GAE/B,OAAO,wBAAII,IAAKJ,GAAG,kBAAC,IAAD,CAASO,GAAG,KAAMR,OAElCzC,EAAQiB,EAAIhB,SAASH,GAAYE,MACjCE,EAAS,sBAAkBF,EAAlB,aAGd,OACE,6BAASkD,GAAG,UACV,yBAAKhD,UAAYA,GACf,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,aAAa+C,GAAG,KAAMnD,GACtC,wBAAII,UAAU,SACViB,KAKR,kBAAC,EAAD,QC9CSgC,EA5DC,WAEf,IACMrD,EADMJ,aAAY,SAAAC,GAAK,OAAIA,EAAMI,OAChBD,WAajBsD,EAAa,SAAChD,GACnBO,QAAQC,IAAIR,EAAEI,OAAO6C,UAAWtB,OAAOuB,WAAYvB,OAAOwB,aAC1D,IAAMC,EAAKpD,EAAEI,OAAO6C,UAEdI,EAAI1B,OAAOuB,WACXI,EAAI3B,OAAOwB,YACbI,EAAIC,SAAS7B,OAAO8B,iBAAiBlC,SAASC,cAAc,gBAAgBkC,UAC5EpB,EAAIkB,SAAS7B,OAAO8B,iBAAiBlC,SAASC,cAAc,UAAUkC,UAC1EH,EAAIC,SAASD,GACbA,EAAY,uBAAPH,EAA+BI,SAASD,EAAI,GAAKC,SAASD,EAAI,GACnEjB,EAAY,uBAAPc,EAA+BI,SAASlB,EAAI,GAAKkB,SAASlB,EAAI,GACnEf,SAASC,cAAc,eAAeC,MAAMiC,SAAWH,EAAI,KAC3DhC,SAASC,cAAc,SAASC,MAAMiC,SAAWpB,EAAI,KAErDf,SAASC,cAAc,YAAYyB,UAAnC,4BAAoEI,EAApE,qCAAkGC,EAAlG,iCAA4HC,EAA5H,iCAAsJjB,EAAtJ,WAGKqB,EAAY,GAClB,GAAkB,eAAfjE,EACF,IAAI,IAAI4C,EAAE,EAAGA,EAAE,GAAIA,IAAI,CACtB,IAAMsB,EAAItB,EAAE,EACZqB,EAAUE,KAAO,yBAAKnB,IAAKJ,EAAGxC,UAAU,eAAvB,SAA4C8D,IAI/D,MAAkB,WAAflE,EAED,yBAAKoD,GAAG,UAAUhD,UAAU,aAC3B,yBAAKgD,GAAG,UACP,4BAASH,QAASK,GAAlB,sBAAyD,6BACzD,4BAASL,QAASK,GAAlB,sBAAyD,6BACzD,yBAAKlD,UAAU,cAQZ,yBAAKgD,GAAG,UAAUhD,UAAU,aAC/B6D,I,iBCtCUG,EAjBA,WAOd,OACC,6BAAShB,GAAG,SAAShD,UAHP,+BAIb,yBAAKA,UAAU,aACd,0EACA,6BAAK,yBAAKiE,IAAKC,IAAMlE,UAAU,WAAWmE,IAAI,SAA9C,4BCKWpD,MAdf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKf,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoE,OAAK,EAACC,KAAK,IAAIC,UAAWrB,KAEnC,kBAAC,EAAD,SCFYsB,QACW,cAA7B1C,OAAO2C,SAASC,UAEe,UAA7B5C,OAAO2C,SAASC,UAEhB5C,OAAO2C,SAASC,SAASC,MACvB,2D,mBCRAC,EAAe,CACjB/E,WAAY,aACZG,SAAS,CACVqC,KAAK,CAAC,aAAc,SAAU,UAAW,SAAU,OAAQ,YAC3D,aAAc,CAACtC,MAAM,MAAOmB,SAAS,CAAC,KAAM,KAAO,CAACyB,KAAK,QAAS,CAACA,KAAK,iBAAkB,CAACA,KAAK,YAChG,OAAU,CAAC5C,MAAM,OAAQmB,SAAS,CAAC,CAACyB,KAAK,QAAS,CAACA,KAAK,YACxD,KAAQ,CAAC5C,MAAM,QAASmB,SAAS,CAAC,CAACyB,KAAK,UACxC,SAAY,CAAC5C,MAAM,SAAUmB,SAAS,CAAC,CAACyB,KAAK,QAAS,CAACA,KAAK,mBAC5D,QAAW,CAAC5C,MAAM,OAAQmB,SAAS,CAAE,CAACyB,KAAK,QAAQ,CAACA,KAAK,SAAU,CAACA,KAAK,WACzE,OAAU,CAAC5C,MAAM,QAASmB,SAAS,CAAE,CAACyB,KAAK,WAE1CkC,QAAS,GAwBPC,EAAqB,CAAClF,QAAO,EAAOmF,kBAAkB,IA4B7CC,EAVKC,YAAgB,CAInCnF,IA3CkB,WAAmC,IAAlCJ,EAAiC,uDAAzBkF,EAAcM,EAAW,uCACjD,OAAQA,EAAO7E,MAChB,IAAK,mBACJ,IAAM8E,EAAezF,EAAMmF,UAAYnF,EAAMM,SAASqC,KAAK+C,OAAS,EAAI,EAAI1F,EAAMmF,QAAU,EACtFQ,EAAUH,EAAO5E,QAAU4E,EAAO5E,QAAUZ,EAAMM,SAASqC,KAAK8C,GACtE,OAAO,eACHzF,EADJ,CAECG,WAAYwF,EACZR,QAAQM,IAEV,IAAK,kBACJ,IAAMG,EAAQ,eAAQ5F,GAEtB,OADA4F,EAAStF,SAASkF,EAAO5E,QAAQT,YAAY2B,UAAY0D,EAAO5E,QAAQkB,UACjE,eAAK9B,EAAZ,CAAmB4F,aACpB,QACC,OAAO5F,IA8BVC,UAvBqB,WAAyC,IAAxCD,EAAuC,uDAA/BoF,EAAoBI,EAAW,uCAC7D,OAAOA,EAAO7E,MACb,IAAK,mBACJ,IAAMT,GAAUF,EAAME,OACtB,MAAO,CAACA,SAAQmF,kBAAkBrF,EAAMqF,mBACzC,IAAK,kBACJ,OAAO,eAAIrF,EAAX,CAAkBE,QAAO,IAC1B,IAAK,iBACJ,OAAO,eAAIF,EAAX,CAAkBE,QAAO,IAC1B,IAAK,uBACF,MAAO,CAACA,OAAOF,EAAME,OAAQmF,kBAAkBG,EAAO5E,SACzD,QACC,OAAOZ,M,QChDJN,EAAQmG,YAAYP,EAAaQ,YAAgBC,MAEvDC,IAASC,OAAQ,kBAAC,IAAD,CAAUvG,MAAOA,GAAO,kBAAC,EAAD,OAAoBsC,SAASkE,eAAe,SFuH/E,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1F,QAAQ0F,MAAMA,EAAMC,c","file":"static/js/main.50e59877.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whatsapp.2cc4c3e7.svg\";","import React from 'react';\nimport { useSelector, useDispatch, useStore } from 'react-redux';\n\nexport const SearchbarComponent = () => {\n\n    const searchTermSubmit = (searchTerm) => {\n        return { type:'SEARCH_TERM_SELECTED', payload: searchTerm }\n    }\t\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(searchTermSubmit(e.target.children[0].value))\n\t\te.target.children[0].value = ''\n\t\tconsole.log('STORE:',store.getState());\n\t}\t\n\n\tconst store = useStore();\n\tconst dispatch = useDispatch();\t\n\tconst searchOpen = useSelector(state => state.searchbar.opened);\n\tconst classNameA =  searchOpen ? 'search search-open' : 'search' \n\tconst currentApp = useSelector(state => state.app.currentApp); \n\tconst color = useSelector(state => state.app.appsList[currentApp].color);  \n\tconst className = `${color} darken-3 search-bar`\n\n\treturn (\n      <div className={classNameA}  >\n        <div className={className}>\n          <div className=\"container\">\n            <form onSubmit={ handleSubmit }>\n              <input className=\"searchbar-input\" type='text' name='input-search' placeholder=\"Enter search term\" />\n              <button>  <i className=\"material-icons waves-effect  waves-light\">search</i></button>\n            </form>\n          </div>\n        </div>\n      </div> \n\t)\n}\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { SearchbarComponent } from './SearchbarComponent'\nimport { useSelector, useDispatch/*, useStore*/ } from 'react-redux';\n\nconst Navbar = () => {\n\n\t/// Access store items.\n  const dispatch = useDispatch();\n  //const store = useStore();\n  const App = useSelector(state => state.app);\n  const currentApp = App.currentApp;\n  const storeNavItems = App.appsList[currentApp].navItems; \n\n\t/// Actions\n  const navMenuAction = (data, currentApp) => { \n\t\treturn { type:'CHANGE_APP_STATE', payload: null }\n\t}\n  const showSearchBar = () => {\tdispatch(toggleSearchBar())\t}\t\n  const toggleCartAction = () => { return { type: 'TOGGLE_CARTOPEN' } }\n  const toggleSearchBar = () => { return { type: 'TOGGLE_SEARCHBAR' } }\n  const closeSearchBar = () => {return { type: 'CLOSE_SEARCHBAR' } }\n  const openSearchBar = () => { return { type: null } }\n  const saveScrollPos = (scrollPos) => { \n\t\t/// Preserving the scroll position for when you return to this page...\n\t\treturn { type: 'SAVE_SCROLL_POS', payload:{scrollPos, currentApp:App.currentApp} } \n\t}\n\n\t/// Fired 'on load' of page.\n\tuseEffect(() => {\n\t\t/// NB: this function fires *after* the new page has loaded.\n\t\t\n\t\t/// Return to the scroll position that has been saved for this page.\n\t\tconst sp = App.appsList[App.currentApp].scrollPos\n\t\tconst scrollPosition = (sp) ? sp : 0;\n\t\t\t\t\n\t\t/// For the 'next' pages.\n\t\tconst d = document.querySelector('#Display');\n\t\td.style.top = '0'\n\t\twindow.scrollTo(0, scrollPosition);\n\t\t//window.scrollTo({ top: scrollPosition, left: 0, behavior: 'smooth' });\n\t\t\n\t\t/// A little frivolity - has no effect on mobile.\n\t\tdocument.title = App.currentApp;\n  }, [App]);\n\n\t/// User interaction actions.\n  const addMenuBtn = (item, currentApp) => {\n\t\t\n\t\t/// Make your 'on exit' (ie. before exiting) changes/actions here.\n\t\t/// And then 'post' changes (ie. at arrived page / on arrival) actions in \"useEffect(() => { ...\"\n\t\t\n\t\t/// 'Preserve' the scroll position for when you return to this page.\n\t\tdispatch(saveScrollPos(window.scrollY))\n\t\t\n    // Close searchbar unless next item is reddit\n    const appsArray = App.appsList.apps;\n\t\tif(appsArray[appsArray.indexOf(currentApp) + 1] !== 'reddit'){\n\t\t\tdispatch(closeSearchBar())\n\t\t} else {\n\t\t\tdispatch(openSearchBar())\n\t\t}\n\t\tdispatch(navMenuAction(item, currentApp))\n\t\t//console.log('STORE:',store.getState());\n\t}  \n  const iconButton = (fn, icon, index) => { \n    return (\n      <span key={index} className=\"right white-text\"  onClick={ fn }  >\n        <i className=\"material-icons waves-effect  waves-light\">{ icon }</i>\n      </span>\n    )\n  }\n  const navItems = storeNavItems && storeNavItems.map((navItem, i) => {\n    if ((typeof navItem) === 'object'){\n      const {icon} = navItem\n      let fn\n      switch(icon){\n        case 'menu':\n          fn = addMenuBtn\n          break\n        case 'shopping_cart':\n          fn = toggleCartAction\n          break\n        case 'search':\n          fn = showSearchBar\n          break\n        default:\n          fn = null\n        }\n      return  iconButton(fn, icon, i)\n    } \n    return <li key={i}><NavLink to=\"/\">{ navItem }</NavLink></li>\n  });\n\tconst color = App.appsList[currentApp].color; \n\tconst className = `nav-wrapper ${color} darken-3`\n  \n  /// Return the component.\n  return(\n    <section id='Navbar'>\n      <nav className={ className } >\n        <div className=\"container\">\n          <Link className=\"brand-logo\" to=\"/\">{ currentApp }</Link>\n          <ul className=\"right\">\n            { navItems }\n          </ul>\n      \n        </div>\n      </nav> \n      <SearchbarComponent />\n    </section>\n    )\t\n}\n\nexport default Navbar\n\n\n\n\n","import React/*, { useEffect } */from 'react';\nimport { useSelector } from 'react-redux';\n\nconst Display = () => {\n\t\n\tconst App = useSelector(state => state.app);\n\tconst currentApp = App.currentApp;\n\n\t//useEffect(() => {\n\t\t//const d = document.querySelector('#Display');\n\t\t\t////if(d.children.length > 0){ \n\t\t\t\t//d.style.top = '0'\n\t\t\t\t//window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n\t\t\t\t////window.scrollTo(0,0);\n\t\t\t////}\n\t\t//document.title = currentApp;\n\n  //}, [currentApp]);\n\t\n\tconst handlePlus = (e) => {\n\t\tconsole.log(e.target.innerHTML, window.innerWidth, window.innerHeight);\n\t\tconst el = e.target.innerHTML\n\t\t\n\t\tconst w = window.innerWidth\n\t\tconst h = window.innerHeight\n\t\tlet f = parseInt(window.getComputedStyle(document.querySelector('.brand-logo')).fontSize);\n\t\tlet i = parseInt(window.getComputedStyle(document.querySelector('nav i')).fontSize);\n\t\tf = parseInt(f)\t\t\n\t\tf = (el === 'increase font size') ? parseInt(f + 2) : parseInt(f - 2)\n\t\ti = (el === 'increase font size') ? parseInt(i + 1) : parseInt(i - 1)\n\t\tdocument.querySelector('.brand-logo').style.fontSize = f + 'px'\t\n\t\tdocument.querySelector('nav i').style.fontSize = i + 'px'\t\n\n\t\tdocument.querySelector('.readout').innerHTML = `Screen Width(px): ${w}<br /> Screen Height(px): ${h}<br /> Logo font(px): ${f}<br /> Icon font(px): ${i}<br />`;\n\t}\n\t\n\tconst itemsList = [];\n\tif(currentApp === 'Chilli Hot'){\n\t\tfor(let i=0; i<24; i++){\n\t\t\tconst n = i+1\n\t\t\titemsList.push ((<div key={i} className='gallery-box'>item: {n}</div>))\n\t\t}\t\t\t\n\t}\n\t\n\tif(currentApp === 'Tester'){\n\t\treturn (\n\t\t\t<div id='Display' className='container'> \n\t\t\t\t<div id='tester'>\n\t\t\t\t\t<button  onClick={handlePlus}>increase font size</button><br />\n\t\t\t\t\t<button  onClick={handlePlus}>decrease font size</button><br />\n\t\t\t\t\t<div className='readout'></div>\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t/// Return component.\n\treturn <div id='Display' className='container'>         \n\t\t\t{ itemsList }\n\t\t</div>\n}\n\nexport default Display\n\n\n","import React from 'react';\n//import { useSelector } from 'react-redux';\nimport logo from './whatsapp.svg';\n\nconst Footer = () => {\n\n    //const App = useSelector(state => state.app);\n    //const currentApp = App.currentApp;\n\t\t//const color = App.appsList[currentApp].color; \n\tconst className = `page-footer  black darken-3`\n\n\treturn (\n\t\t<section id='Footer' className={className}>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>© 2020 Carefree-Coding Pendik/Istanbul</div>\n\t\t\t\t<div><img src={logo} className=\"App-logo\" alt=\"logo\" /> + 90 (0)532 123 4567</div>\n\t\t\t</div>\n\t\t</section>\n\t)\n}\n\nexport default Footer\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from \"./Navbar\";\nimport Display from \"./Display\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Display} />\n        </Switch> \n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//import authReducer from './authReducer'\n//import projectReducer from './projectReducer'\n//import appReducer from './appReducer'\n//import app2Reducer from './app2Reducer'\n//import navReducer from './navReducer'\n\nimport { combineReducers } from 'redux'\n\n\n/// App reducer\nconst initialState = {\n    currentApp: 'Chilli Hot',\n    appsList:{\n\t\t\tapps:['Chilli Hot', 'Tester', 'Contact', 'reddit', 'app3', 'Shopping'], \n\t\t\t\"Chilli Hot\": {color:'red', navItems:['n1', 'n2',  {icon:'menu'}, {icon:'shopping_cart'}, {icon:'search'}]},\n\t\t\t\"reddit\": {color:'blue', navItems:[{icon:'menu'}, {icon:'search'}]},\n\t\t\t\"app3\": {color:'green', navItems:[{icon:'menu'}]},\n\t\t\t\"Shopping\": {color:'yellow', navItems:[{icon:'menu'}, {icon:'shopping_cart'}]},\n\t\t\t\"Contact\": {color:'grey', navItems:[ {icon:'menu'},{icon:'email'}, {icon:'phone'} ]},\n\t\t\t\"Tester\": {color:'black', navItems:[ {icon:'menu'} ]},\n\t\t},\n    current: 0\n};\n   \nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n\t\t\tcase 'CHANGE_APP_STATE':\n\t\t\t\tconst nextAppIndex = state.current === state.appsList.apps.length - 1 ? 0 : state.current + 1\n\t\t\t\tconst nextApp = action.payload ? action.payload : state.appsList.apps[nextAppIndex]\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcurrentApp: nextApp,\n\t\t\t\t\tcurrent:nextAppIndex\n\t\t\t\t};\n\t\t\tcase 'SAVE_SCROLL_POS':\n\t\t\t\tconst newState = { ...state }\t\t\t\t\t\n\t\t\t\tnewState.appsList[action.payload.currentApp].scrollPos = action.payload.scrollPos\n\t\t\t\treturn { ...state, newState };\n\t\t\tdefault:\n\t\t\t\treturn state;\n    }\n};\n\n\n/// SearchbarComponent reducer\nconst initialSearchState = {opened:false, currentSearchTerm:''}\nconst searchReducer = (state = initialSearchState, action) => {\n\tswitch(action.type){\n\t\tcase 'TOGGLE_SEARCHBAR':\n\t\t\tconst opened = !state.opened\n\t\t\treturn {opened, currentSearchTerm:state.currentSearchTerm }\n\t\tcase 'CLOSE_SEARCHBAR':\n\t\t\treturn {...state, opened:false}\n\t\tcase 'OPEN_SEARCHBAR':\n\t\t\treturn {...state, opened:true}\n\t\tcase 'SEARCH_TERM_SELECTED':\n\t\t   return {opened:state.opened, currentSearchTerm:action.payload }\n\t\tdefault:\n\t\t\treturn state\t \t\t\n\t}\n}\n\n\nconst rootReducer = combineReducers({\n\t//auth: authReducer,\n\t//project: projectReducer,\n\t//nav: navReducer,\n\tapp: appReducer,\n\t//app2: app2Reducer,\n\tsearchbar: searchReducer,\n\t//cartOpen:cartReducer\n});\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render( <Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n//window.addEventListener('scroll', function(e) {\n  ////let last_known_scroll_position = window.scrollY;\n  ////const n = document.querySelector('#Navbar');\n  ////console.log(window.getComputedStyle( n.children[0] ,null).getPropertyValue('top'));\n\n//});\n"],"sourceRoot":""}