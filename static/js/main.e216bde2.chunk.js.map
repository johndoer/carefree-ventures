{"version":3,"sources":["whatsapp.svg","SearchbarComponent.js","Navbar.js","ChilliHotComponent.js","fetchAction.js","HackerNewsComponent.js","RedditComponent.js","Display.js","Footer.js","App.js","serviceWorker.js","rootReducer.js","index.js"],"names":["module","exports","SearchbarComponent","dispatch","useDispatch","currentApp","useSelector","state","app","classNameA","searchbar","opened","color","appsList","className","onSubmit","e","preventDefault","searchTerm","target","children","value","length","type","payload","name","placeholder","Navbar","App","storeNavItems","navItems","showSearchBar","toggleSearchBar","toggleCartAction","useEffect","sp","scrollPos","scrollPosition","document","querySelector","style","top","window","scrollTo","title","clickMenuBtn","item","scrollY","appsArray","apps","indexOf","map","navItem","i","fn","icon","index","key","onClick","iconButton","to","id","ChilliHotComponent","itemsList","link","getAttribute","myFetcher","a","URL","delay","fetcher","fetch","res","json","resjson","setTimeout","HackerNewsComponent","hasData","baseURL","isOnline","navigator","onLine","hits","sort","b","parseInt","created_at","d","Date","formattedDate","toUTCString","substring","href","url","rel","author","RedditComponent","console","log","data","created","Display","handlePlus","innerHTML","innerWidth","innerHeight","el","w","h","f","getComputedStyle","fontSize","Footer","src","logo","alt","exact","path","component","Boolean","location","hostname","match","saveScrollPosition","action","updateAppOnDataReceived","updateAppSearchTerm","initialAppState","current","initialSearchState","currentSearchTerm","rootReducer","combineReducers","nextAppIndex","nextApp","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e216bde2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whatsapp.2cc4c3e7.svg\";","import React from 'react';\nimport { useSelector, useDispatch/*, useStore */} from 'react-redux';\n\nexport const SearchbarComponent = () => {\n\n\n\n\n\t//const store = useStore();\n\tconst dispatch = useDispatch();\n\tconst currentApp = useSelector(state => state.app.currentApp);\n\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst searchTerm = e.target.children[0].value\n\n\t\tif(searchTerm.length === 0 || searchTerm === '' || searchTerm === 'undefined'){\n\t\t\treturn\n\t\t}\n\n\t\te.target.children[0].value = '';\n\t\tdispatch({type: 'CLOSE_SEARCHBAR' });\n\n\t\tif(currentApp === 'Hacker News'){\n\t\t\tif(searchTerm === 'tags=front_page'){\n\t\t\t\tdispatch({type: 'SET_SEARCH_TERM', payload: `?${searchTerm}` });\n\t\t\t} else if(searchTerm === 'tags=story'){\n\t\t\t\tdispatch({type: 'SET_SEARCH_TERM', payload: `_by_date?tags=story` });\n\t\t\t}\telse {\n\t\t\t\tdispatch({type: 'SET_SEARCH_TERM', payload: `?query=${searchTerm}` });\n\t\t\t}\n\t\t}\n\t\tif(currentApp === 'reddit'){\n\t\t\tdispatch({type: 'SET_SEARCH_TERM', payload: `${searchTerm}.json` });\n\t\t}\n\n\n\n\t\t//console.log('STORE:', store.getState(), currentApp);\n\t}\n\n\t//const handleChange = (e) => {\n\t\t//console.log(e.target.value);\n\t//}\n\t// autocomplete='off'\n\t// onClick={ handleChange }\n\n\n\n\tconst searchOpen = useSelector(state => state.searchbar.opened);\n\tconst classNameA =  searchOpen ? 'search search-open' : 'search'\n\tconst color = useSelector(state => state.app.appsList[currentApp].color);\n\tconst className = `${color} darken-3 search-bar`\n\n\treturn (\n      <div className={classNameA}  >\n        <div className={className}>\n          <div className=\"container\">\n            <form onSubmit={ handleSubmit }>\n              <input className=\"searchbar-input\" type='text' name='input-search' placeholder=\"Enter search term\"  />\n              <button>  <i className=\"material-icons waves-effect  waves-light\">search</i></button>\n            </form>\n          </div>\n        </div>\n      </div>\n\t)\n}\n\n\n/*\nrationale: - enter a term, console log it, put it into url, fetch the url...\n\n\n\n\n\n\n\n\n*/\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { SearchbarComponent } from './SearchbarComponent'\nimport { useSelector, useDispatch/*, useStore*/ } from 'react-redux';\n\nconst Navbar = () => {\n\n\t/// Access store items.\n  const dispatch = useDispatch();\n  const App = useSelector(state => state.app);\n  const currentApp = App.currentApp;\n  const storeNavItems = App.appsList[currentApp].navItems;\n\n\t/// Actions\n  const navMenuAction = (data, currentApp) => {\n\t\treturn { type:'CHANGE_APP_STATE', payload: null }\n\t}\n  const showSearchBar = () => {\tdispatch(toggleSearchBar())\t}\n  const toggleCartAction = () => { return { type: 'TOGGLE_CARTOPEN' } }\n  const toggleSearchBar = () => { return { type: 'TOGGLE_SEARCHBAR' } }\n  const closeSearchBar = () => {return { type: 'CLOSE_SEARCHBAR' } }\n  const openSearchBar = () => { return { type: null } }\n  const saveScrollPos = (scrollPos) => {\n\t\t/// Preserving the scroll position for when you return to this page...\n\t\treturn { type: 'SAVE_SCROLL_POS', payload:{scrollPos, currentApp:App.currentApp} }\n\t}\n\n\t/// Fired 'on load' of page.\n\tuseEffect(() => {\n\t\t/// NB: this function fires *after* the new page has loaded.\n\n\t\t/// Return to the scroll position that has been saved for this page.\n\t\tconst sp = App.appsList[App.currentApp].scrollPos\n\t\tconst scrollPosition = (sp) ? sp : 0;\n\n\t\t/// For the 'next' pages.\n\t\tconst d = document.querySelector('#Display');\n\t\td.style.top = '0'\n\t\twindow.scrollTo(0, scrollPosition);\n\t\t//window.scrollTo({ top: scrollPosition, left: 0, behavior: 'smooth' });\n\n\t\t/// A little frivolity - has no effect on mobile.\n\t\tdocument.title = App.currentApp;\n  }, [App]);\n\n\t/// User interaction actions.\n  const clickMenuBtn = (item, currentApp) => {\n\n\t\t/// Make your 'on exit' (ie. before exiting) changes/actions here.\n\t\t/// And then 'post' changes (ie. at arrived page / on arrival) actions in \"useEffect(() => { ...\"\n\n\t\t/// 'Preserve' the scroll position for when you return to this page.\n\t\tdispatch(saveScrollPos(window.scrollY))\n\n    // Close searchbar unless next item is reddit\n    const appsArray = App.apps;\n\t\tif(appsArray[appsArray.indexOf(currentApp) + 1] !== 'reddit'){\n\t\t\tdispatch(closeSearchBar())\n\t\t} else {\n\t\t\tdispatch(openSearchBar())\n\t\t}\n\n\t\tdispatch(navMenuAction(item, currentApp))\n\t\t//console.log('STORE:',store.getState());\n\t}\n  const iconButton = (fn, icon, index) => {\n    return (\n      <span key={index} className=\"right white-text\"  onClick={ fn }  >\n        <i className=\"material-icons waves-effect  waves-light\">{ icon }</i>\n      </span>\n    )\n  }\n  const navItems = storeNavItems && storeNavItems.map((navItem, i) => {\n    if ((typeof navItem) === 'object'){\n      const {icon} = navItem\n      let fn\n      switch(icon){\n        case 'menu':\n          fn = clickMenuBtn\n          break\n        case 'shopping_cart':\n          fn = toggleCartAction\n          break\n        case 'search':\n          fn = showSearchBar\n          break\n        default:\n          fn = null\n        }\n      return  iconButton(fn, icon, i)\n    }\n    return <li key={i}><NavLink to=\"/\">{ navItem }</NavLink></li>\n  });\n\tconst color = App.appsList[currentApp].color;\n\tconst className = `nav-wrapper ${color} darken-3`\n\n\tconst homepage = () => {\n\t\tdispatch ( { type:'CHANGE_APP_STATE', payload: 'Chilli Hot' })\n\t}\n\n  /// Return the component.\n  return(\n    <section id='Navbar'>\n      <nav className={ className } >\n        <div className=\"container\">\n\n          <Link className=\"brand-logo\" to=\"/\">{ currentApp }</Link>\n          <ul className=\"right\">\n\n\t\t\t      <span className=\"right white-text\"  onClick={ homepage}  >\n\t\t\t        <i className=\"material-icons waves-effect  waves-light\">arrow_back</i>\n\t\t\t      </span>\n\n            { navItems }\n          </ul>\n        </div>\n      </nav>\n\n      <SearchbarComponent />\n    </section>\n    )\n}\n\nexport default Navbar\n\n\n\n\n","import React/*, { useEffect }*/ from 'react';\nimport {/* useSelector,*/ useDispatch/*, useStore*/ } from 'react-redux';\n//import { myFetcher } from './fetchAction';\n\nconst ChilliHotComponent = () => {\n\n\t//const App = useSelector(state => state);\n\t//const currentApp = useSelector(state => state.app.currentApp);\n\tconst dispatch = useDispatch();\n\n\tconst handleClick = (e) => {\n\t\tdispatch ({ type:'CHANGE_APP_STATE', payload: e.target.getAttribute('link') })\n\t}\n\tconst itemsList = [\n\t\t(<div key={0} link=\"Hacker News\" className='gallery-box hckr'>Hacker News</div>),\n\t\t(<div key={1} link=\"reddit\" className='gallery-box rddt'>Reddit</div>)\n\t]\n\n\treturn (\n\t\t<div id='chilli' className='container-center' onClick = {handleClick}>\n\t\t\t{ itemsList }\n\t\t</div>\n\t\t)\n\n\n/*\n\t/// Variables\n\tconst URL = 'http://localhost:2000/itemsData.php'\n\tconst hasData = useSelector(state => state.app.appsList[currentApp].hasData);\n\n\tif(!hasData){\n\t\t//console.log('no data - must fetch:', hasData);\n\t\tmyFetcher(URL, dispatch)\n\t} else {\n\t\tconsole.log('have data ok:', hasData);\n\t}\n\n\n\t/// Prepare component content.\n\tlet itemsList = [];\n\tif(hasData && hasData !== 'Error'){\n\t\titemsList = hasData.items.map((item, i) => {\n\t\t//itemsList = hasData.hits.map((item, i) => {\n\t\t\treturn (<div key={i} className='gallery-box'>{item.fields.title}</div>)\n\t\t\t//return (<div key={i} className='gallery-box'>\n\t\t\t//{item.title}<br />\n\t\t\t//{item.created_at} <br />\n\t\t\t//{item.author} <br />\n\t\t\t//<a href={item.url}>{item.url}</a><br />\n\t\t\t//</div>)\n\t\t});\n\t} else if(hasData && hasData === 'Error'){\n\t\t/** in here - load dummy data? * /\n\t\titemsList = [ (<div key='0'>There was an error getting data.</div>) ]\n\t} else {\n\t\titemsList = [ (<div key='0'>Loading... Please wait</div>) ]\n\t}\n\n\n\t/// Return component.\n\tconst className = (hasData && hasData === 'Error') ? '' : 'container-center' ;\n\treturn (<div id='chilli' className={className}>\n\t\t\t{ itemsList }\n\t\t</div>)\n*/\n}\n\nexport default ChilliHotComponent\n","export const myFetcher = async(URL = null, dispatch, delay = null) =>  {\n\n\tURL = URL ? URL : '/itemsData.json'\n\n\n\n\t// playing around with delay only in dev.\n\tconst fetcher = async() => {\n    try{\n\t    const res = await fetch(URL, {})\n\t    const resjson = await res.json();\n\t\t  dispatch({ type: 'APP_GOT_DATA', payload: resjson } );\n\t\t} catch (error){\n\t\t\tdispatch({ type: 'APP_GOT_DATA', payload: 'Error' } );\n\t\t}\n\t}\n\n\tif(delay){\n\t\tsetTimeout( ()=>{ fetcher() }, delay)\n\t} else {\n\t\tfetcher();\n\t}\n\n\t//setTimeout(async()=>{\n    //try{\n\t    //const res = await fetch(URL, {})\n\t    //const resjson = await res.json()\n\t\t  //dispatch({ type: 'APP_GOT_DATA', payload: resjson } );\n\t\t//} catch (error){\n\t\t\t//dispatch({ type: 'APP_GOT_DATA', payload: 'Error' } );\n\t\t//}\n\t//}, 5000);\n}\n\n//export default myFetcher\n\n\n\t/// Preservation\n\t///// Fetcher\n  //const fetchData = async () => {\n\t\t//setTimeout(async()=>{\n\t    //try{\n\t\t    //const res = await fetch(URL, {})\n\t\t    //const resjson = await res.json()\n\t\t\t  //dispatch({ type: 'APP_GOT_DATA', payload: resjson } );\n\t\t\t//} catch (error){\n\t\t\t\t//dispatch({ type: 'APP_GOT_DATA', payload: 'Error' } );\n\t\t\t//}\n\t\t//}, 5000);\n\t//}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { myFetcher } from './fetchAction';\n\nconst HackerNewsComponent = () => {\n\n\t/// Variables\n\tconst dispatch = useDispatch();\n\tconst currentApp = useSelector(state => state.app.currentApp);\n\n\tconst hasData = useSelector(state => state.app.appsList[currentApp].hasData);\n\tconst baseURL = useSelector(state => state.app.appsList[currentApp].baseURL);\n\tconst searchTerm = useSelector(state => state.app.appsList[currentApp].searchTerm);\n\t//let URL\n\t//if(searchTerm){\n\t\t//URL = `${baseURL}${searchTerm}`\n\t//} else {\n\t\t//URL = `${baseURL}_by_date?tags=story&hitsPerPage=50`\n\t//}\n\tconst URL = (searchTerm) ? `${baseURL}${searchTerm}` : `${baseURL}_by_date?tags=story&hitsPerPage=50`\n\n\tconst isOnline = (!navigator.onLine) ? false : true;\n\t//let URL = /*'http://localhost:2000/HackerNewsApi.php'; //*/(isOnline) ? `${baseURL}${searchTerm}` : 'http://localhost:2000/HackerNewsApi.php'\n\t//const URL = `${baseURL}${searchTerm}`\n\n\n/*\n\t///===== Exclude unworkables =================\n\n\t/// No search term\n\t//React.useEffect(() => {\n\t\t//if(!searchTerm && !isOnline){\n\t\t\t///* TODO: maybe put in here some random selection..* /\n\t\t\t////dispatch({ type: 'TOGGLE_SEARCHBAR' });\n\t\t\t//console.log('branch 1');\n\t\t//}\n\t\t//if(!searchTerm && isOnline){\n\t\t\t///* TODO: maybe put in here some random selection..* /\n\t\t\t////dispatch({ type: 'TOGGLE_SEARCHBAR' });\n\t\t\t//console.log('branch 2');\n\t\t//}\n\t\t//if(searchTerm && ! isOnline){\n\t\t\t///* TODO: maybe put in here some random selection..* /\n\t\t\t////dispatch({ type: 'TOGGLE_SEARCHBAR' });\n\t\t\t//console.log('branch 3',  `${baseURL}${searchTerm}`);\n\t\t//}\n\t\t//if(searchTerm && isOnline){\n\t\t\t///* TODO: maybe put in here some random selection..* /\n\t\t\t////dispatch({ type: 'TOGGLE_SEARCHBAR' });\n\t\t\t//// http://hn.algolia.com/api/v1/search?tags=front_page\n\t\t\t//// https://hn.algolia.com/api/v1/search?query=tags=front_page\n\t\t\t//console.log('branch 4',  `${baseURL}${searchTerm}`);\n\t\t//}\n  //}, [ baseURL, isOnline, dispatch, searchTerm]);\n\n*/\n\n\n\t/// No internet\n\tif(!isOnline){\n\t\treturn ( <div id='hackerApi' className=''>No internet connection.</div>)\n\t}\n\n\tif(!searchTerm && isOnline){\n\t\t// This case will never happen as, if there isn't one we are setting the search term to 'front page'\n\t}\n\n\n\n\n\t///===== Proceed with request ================\n\n\t/// Fetching data.\n\tif( ! hasData ){\n\t\tmyFetcher(URL, dispatch)\n\t\treturn (<div id='hackerApi' >Loading...</div>)\n\t}\n\n\t/// Request returned error.\n\tif( hasData === 'Error' ){\n\t\t/** TODO: in here - load dummy data? */\n\t\treturn (<div id='hackerApi' >Error loading content.</div>)\n\t}\n\n\t/// Data OK - populate component content.\n\tif( hasData !== 'Error'){\n\n\t\t/// Sort items array by date.\n\t\tconst sortedItems =  hasData.hits.sort((a, b) => parseInt(b.created_at) - parseInt(a.created_at));\n\n\t\t/// Iterate over array.\n\t\tconst itemsList = sortedItems.map((item, i) => {\n\n\t\t\t/// Format the date\n\t\t\tconst d = new Date(item.created_at);\n\t\t\tconst formattedDate = d.toUTCString().substring(0, d.toUTCString().length -4);\n\n\t\t\t/// Return an div component with the n'th content.\n\t\t\treturn (\n\t\t\t\t\t<div key={i}  className='hackerApi-box'>\n\t\t\t\t\t\t<a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<div className='title'>{item.title}</div>\n\t\t\t\t\t\t\t<div className='date'>{formattedDate}</div>\n\t\t\t\t\t\t\t<div className='author'>Author: {item.author}</div>\n\t\t\t\t\t\t\t<div className='url'>{item.url}</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t});\n\n\treturn (<div id='hackerApi' >{ itemsList }</div> )\n\t}\n\n}\n\nexport default HackerNewsComponent\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { myFetcher } from './fetchAction';\n\nconst RedditComponent = () => {\n\n\t/// Variables\n\tconst dispatch = useDispatch();\n\tconst currentApp = useSelector(state => state.app.currentApp);\n\tconst hasData = useSelector(state => state.app.appsList[currentApp].hasData);\n\tconst baseURL = useSelector(state => state.app.appsList[currentApp].baseURL);\n\tconst searchTerm = useSelector(state => state.app.appsList[currentApp].searchTerm);\n\tlet URL\n\tif(searchTerm){\n\t\tURL = `${baseURL}${searchTerm}`\n\t} else {\n\t\tURL = `${baseURL}All.json`\n\t}\n\n\tconst isOnline = (!navigator.onLine) ? false : true;\n\t//const URL = 'http://localhost:2000/reddit-turkey.php';// (isOnline) ? `${baseURL}${searchTerm}.json` : 'http://localhost:2000/reddit-turkey.php'\n\t//const URL = `${baseURL}${searchTerm}`\n\n\n/*\n\t///===== Abort unworkables =================\n\n\t/// No search term - abort.\n\tReact.useEffect(() => {\n\t\tif(!searchTerm && isOnline){\n\t\t\t/* TODO: maybe put in here some random selection..* /\n\t\t\tdispatch({ type: 'TOGGLE_SEARCHBAR' });\n\t\t}\n  }, [ isOnline, dispatch, searchTerm]);\n  if(!searchTerm) return ( <div id='hackerApi' className=''></div>)\n\n\t/// No internet - abort.\n\tif(!searchTerm && !isOnline){\n\t\treturn ( <div id='hackerApi' className=''>No internet connection.</div>)\n\t}\n\n*/\n\n\t/// No internet\n\tif(!isOnline){\n\t\treturn ( <div id='hackerApi' className=''>No internet connection.</div>)\n\t}\n\n\tif(!searchTerm && isOnline){\n\t\t// This case will never happen as, if there isn't one we are setting the search term to 'front page'\n\t}\n\n\t///===== Proceed with request ================\n\n\t/// Fetching data in progress.\n\tif( ! hasData ){\n\t\tmyFetcher(URL, dispatch)\n\t\treturn (<div id='hackerApi' >Loading...</div>)\n\t}\n\n\t/// Request returned error.\n\tif( hasData === 'Error' ){\n\t\t/** TODO: in here - load dummy data? */\n\t\tconsole.log(`${baseURL}${searchTerm}`);\n\t\treturn (<div id='hackerApi' >Error loading content.</div>)\n\t}\n\n\t/// Data OK - populate component content.\n\tif( hasData !== 'Error'){\n\n\t\t/// Sort items array by date.\n\t\tconst sortedItems =  hasData.data.children.sort((a, b) => parseInt(b.data.created) - parseInt(a.data.created));\n\n\t\t/// Iterate over array.\n\t\tconst itemsList = sortedItems.map((item, i) => {\n\n\t\t\t/// Format the date\n\t\t\t//const d = new Date(item.created_at);\n\t\t\tconst d = new Date(item.data.created * 1000);\n\t\t\tconst formattedDate = d.toUTCString().substring(0, d.toUTCString().length -4);\n\n\t\t\t/// Return an div component with the n'th content.\n\t\t\treturn (\n\t\t\t\t<div key={i} className='hackerApi-box'>\n\t\t\t\t\t<a href={item.data.url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t<div className='title' >{item.data.title}</div>\n\t\t\t\t\t\t<div className='date'>{formattedDate}</div>\n\t\t\t\t\t\t<div className='author'>Author: {item.data.author}</div>\n\t\t\t\t\t\t<div className='url'>{item.data.url}</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t});\n\n\treturn (<div id='hackerApi' >{ itemsList }</div> )\n\t}\n}\n\nexport default RedditComponent\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ChilliHotComponent from './ChilliHotComponent';\nimport HackerNewsComponent from './HackerNewsComponent';\nimport RedditComponent from './RedditComponent';\n\nconst Display = () => {\n\n\tconst currentApp = useSelector(state => state.app.currentApp);\n\n\tif(currentApp === 'reddit'){\n\t\treturn (<div id='Display' className='container'>\n\t\t\t\t<RedditComponent />\n\t\t\t</div>)\n\t}\n\n\tif(currentApp === 'Hacker News'){\n\t\treturn (<div id='Display' className='container'>\n\t\t\t\t<HackerNewsComponent />\n\t\t\t</div>)\n\t}\n\n\tif(currentApp === 'Chilli Hot'){\n\t\treturn (<div id='Display' className='container'>\n\t\t\t\t<ChilliHotComponent />\n\t\t\t</div>)\n\t}\n\n\tif(currentApp === 'Tester'){\n\n\t\t/// Click action on buttons for fonts sizes\n\t\tconst handlePlus = (e) => {\n\t\t\tconsole.log(e.target.innerHTML, window.innerWidth, window.innerHeight);\n\t\t\tconst el = e.target.innerHTML\n\n\t\t\tconst w = window.innerWidth\n\t\t\tconst h = window.innerHeight\n\t\t\tlet f = parseInt(window.getComputedStyle(document.querySelector('.brand-logo')).fontSize);\n\t\t\tlet i = parseInt(window.getComputedStyle(document.querySelector('nav i')).fontSize);\n\t\t\tf = parseInt(f)\n\t\t\tf = (el === 'increase font size') ? parseInt(f + 2) : parseInt(f - 2)\n\t\t\ti = (el === 'increase font size') ? parseInt(i + 1) : parseInt(i - 1)\n\t\t\tdocument.querySelector('.brand-logo').style.fontSize = f + 'px'\n\t\t\tdocument.querySelector('nav i').style.fontSize = i + 'px'\n\n\t\t\tdocument.querySelector('.readout').innerHTML = `Screen Width(px): ${w}<br /> Screen Height(px): ${h}<br /> Logo font(px): ${f}<br /> Icon font(px): ${i}<br />`;\n\t\t}\n\n\t\treturn (\n\t\t\t<div id='Display' className='container'>\n\t\t\t\t<div id='tester'>\n\t\t\t\t\t<button  onClick={handlePlus}>increase font size</button><br />\n\t\t\t\t\t<button  onClick={handlePlus}>decrease font size</button><br />\n\t\t\t\t\t<div className='readout'></div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\n\t/// Return default (empty) component.\n\treturn (<div id='Display' className='container'>   </div>)\n}\n\nexport default Display\n\n\n","import React from 'react';\n//import { useSelector } from 'react-redux';\nimport logo from './whatsapp.svg';\n\nconst Footer = () => {\n\n    //const App = useSelector(state => state.app);\n    //const currentApp = App.currentApp;\n\t\t//const color = App.appsList[currentApp].color; \n\tconst className = `page-footer  black darken-3`\n\n\treturn (\n\t\t<section id='Footer' className={className}>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>© 2020 Carefree-Coding Pendik/Istanbul</div>\n\t\t\t\t<div><img src={logo} className=\"App-logo\" alt=\"logo\" /> + 90 (0)532 123 4567</div>\n\t\t\t</div>\n\t\t</section>\n\t)\n}\n\nexport default Footer\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from \"./Navbar\";\nimport Display from \"./Display\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Display} />\n        </Switch>\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//import authReducer from './authReducer'\n//import projectReducer from './projectReducer'\n//import appReducer from './appReducer'\n//import app2Reducer from './app2Reducer'\n//import navReducer from './navReducer'\nimport { combineReducers } from 'redux'\n\n\n/// App reducer\nfunction saveScrollPosition(state, action) {\n\n  /// Update an app to store its scrollPos.\n  return {\n    ...state,\n    appsList: {\n      ...state.appsList,\n      [action.payload.currentApp]: {\n        ...state.appsList[action.payload.currentApp],scrollPos: action.payload.scrollPos\n      }\n    }\n  }\n}\nfunction updateAppOnDataReceived(state, action, currentApp){\n\n\t/// Update an app to have the data it received from a fetch.\n  return {\n    ...state,\n    appsList: {\n      ...state.appsList,\n      [currentApp]: {\n        ...state.appsList[currentApp], hasData: action.payload\n      }\n    }\n  }\n\n}\nconst updateAppSearchTerm = (state, action, currentApp) => {\n  return {\n    ...state,\n    appsList: {\n      ...state.appsList,\n      [currentApp]: {\n        ...state.appsList[currentApp], searchTerm: action.payload,  hasData: false\n      }\n    }\n  }\n\n}\n\nconst initialAppState = {\n    currentApp: 'Chilli Hot',\n\t\tapps:['Chilli Hot','reddit',  'Hacker News', 'Tester', 'Contact', 'Shopping'],\n    current: 0,\n    appsList:{\n\t\t\t\"Chilli Hot\": {\n\t\t\t\tcolor:'red',\n\t\t\t\tnavItems:['n1', 'n2',  {icon:'menu'}, {icon:'shopping_cart'}, {icon:'search'}],\n\t\t\t\thasData:false,\n\t\t\t\tbaseURL: false,\n\t\t\t\tsearchTerm: null\n\t\t\t\t},\n\t\t\t\"reddit\": {color:'blue', navItems:[{icon:'menu'}, {icon:'search'}], hasData:false, baseURL: 'https://www.reddit.com/r/', searchTerm: null},\n\t\t\t\"Hacker News\": {color:'green', navItems:[{icon:'menu'}, {icon:'search'}], hasData:false, baseURL: 'https://hn.algolia.com/api/v1/search', searchTerm: null},\n\t\t\t\"Shopping\": {color:'yellow', navItems:[{icon:'menu'}, {icon:'shopping_cart'}], hasData:false, baseURL: false, searchTerm: null},\n\t\t\t\"Contact\": {color:'grey', navItems:[ {icon:'menu'},{icon:'email'}, {icon:'phone'} ], hasData:false, baseURL: false, searchTerm: null},\n\t\t\t\"Tester\": {color:'black', navItems:[ {icon:'menu'} ], hasData:false, baseURL: false, searchTerm: null},\n\t\t}\n};\nconst appReducer = (state = initialAppState, action) => {\n    switch (action.type) {\n\t\t\t// populates Hacker News' search term when called from front page\n\t\t\tcase 'SEARCH_TERM_SELECTED_1':\n\t\t\t\treturn updateAppSearchTerm(state, action, state.currentApp)\n\t\t\tcase 'CHANGE_APP_STATE':\n\t\t\t\tlet nextAppIndex, nextApp;\n\t\t\t\tif(action.payload){\n\t\t\t\t\tnextAppIndex = state.apps.indexOf(action.payload)\n\t\t\t\t} else {\n\t\t\t\t\tnextAppIndex = (state.current === state.apps.length - 1) ? 0 : state.current + 1\n\t\t\t\t}\n\t\t\t\tnextApp = state.apps[nextAppIndex]\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcurrentApp: nextApp,\n\t\t\t\t\tcurrent: nextAppIndex\n\t\t\t\t};\n\t\t\tcase 'SAVE_SCROLL_POS':\n\t\t\t\treturn saveScrollPosition(state, action)\n\t\t\tcase 'APP_GOT_DATA':\n\t\t\t\treturn updateAppOnDataReceived(state, action, state.currentApp)\n\t\t\tcase 'SET_SEARCH_TERM':\n\t\t\t\treturn updateAppSearchTerm(state, action, state.currentApp)\n\t\t\tdefault:\n\t\t\t\treturn state;\n    }\n};\n\n/// SearchbarComponent reducer\nconst initialSearchState = {opened:false, currentSearchTerm:''}\nconst searchReducer = (state = initialSearchState, action) => {\n\tswitch(action.type){\n\t\tcase 'TOGGLE_SEARCHBAR':\n\t\t\tconst opened = !state.opened\n\t\t\treturn {opened, currentSearchTerm:state.currentSearchTerm }\n\t\tcase 'CLOSE_SEARCHBAR':\n\t\t\treturn {...state, opened:false}\n\t\tcase 'OPEN_SEARCHBAR':\n\t\t\treturn {...state, opened:true}\n\t\tcase 'SEARCH_TERM_SELECTED':\n\t\t\t// sets search term when entered into search bar\n\t\t  return {opened:state.opened, currentSearchTerm: action.payload }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n///// Fetch reducer\n//const initialFetchState = { isFetching: false, data: [], error: false };\n//const fetchReducer = (state = initialFetchState, action) => {\n\t//switch(action.type){\n\n\t\t///// Data has been requested, waiting\n\t\t//case 'DATA_REQUEST_IN_PROGRESS':\n      //return { ...state, isFetching: true };\n\n\t\t///// Data has been retrieved (up to caller to destructure received data (<< not accurate))\n\t\t//case 'DATA_RECEIVED':\n      //return { ...state, isFetching: false, data: action.payload, error: false };\n\n\t\t///// Data request has completed with error/failure\n\t\t//case 'DATA_REQUEST_ERROR':\n\t\t\t //return {...state, isFetching: false, error: action.payload}\n\n\t\t//default:\n\t\t\t //return state;\n\t//}\n//}\n\n\n\nconst rootReducer = combineReducers({\n\t//auth: authReducer,\n\t//project: projectReducer,\n\t//nav: navReducer,\n\tapp: appReducer,\n\t//app2: app2Reducer,\n\tsearchbar: searchReducer,\n\t//fetch: fetchReducer\n\t//cartOpen:cartReducer\n});\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render( <Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n//window.addEventListener('scroll', function(e) {\n  ////let last_known_scroll_position = window.scrollY;\n  ////const n = document.querySelector('#Navbar');\n  ////console.log(window.getComputedStyle( n.children[0] ,null).getPropertyValue('top'));\n\n//});\n"],"sourceRoot":""}