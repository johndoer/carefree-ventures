{"version":3,"sources":["whatsapp.svg","SearchbarComponent.js","Navbar.js","fetchAction.js","ChilliHotComponent.js","HackerNewsComponent.js","RedditComponent.js","Display.js","Footer.js","App.js","serviceWorker.js","rootReducer.js","index.js"],"names":["module","exports","SearchbarComponent","store","useStore","dispatch","useDispatch","classNameA","useSelector","state","searchbar","opened","currentApp","app","color","appsList","className","onSubmit","e","preventDefault","searchTerm","target","children","value","length","type","payload","console","log","getState","name","placeholder","Navbar","App","storeNavItems","navItems","showSearchBar","toggleSearchBar","toggleCartAction","useEffect","sp","scrollPos","scrollPosition","document","querySelector","style","top","window","scrollTo","title","addMenuBtn","item","scrollY","appsArray","apps","indexOf","map","navItem","i","fn","icon","index","key","onClick","iconButton","to","id","myFetcher","a","URL","delay","fetcher","fetch","res","json","resjson","setTimeout","ChilliHotComponent","hasData","itemsList","items","fields","HackerNewsComponent","baseURL","navigator","onLine","hits","sort","b","parseInt","created_at","d","Date","Intl","DateTimeFormat","year","month","day","formatToParts","mo","da","ye","formattedDate","author","href","url","RedditComponent","data","created","Display","handlePlus","innerHTML","innerWidth","innerHeight","el","w","h","f","getComputedStyle","fontSize","Footer","src","logo","alt","exact","path","component","Boolean","location","hostname","match","saveScrollPosition","action","updateAppOnDataReceived","updateAppSearchTerm","initialAppState","current","initialSearchState","currentSearchTerm","initialFetchState","isFetching","error","rootReducer","combineReducers","nextAppIndex","nextApp","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.38444364.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whatsapp.2cc4c3e7.svg\";","import React from 'react';\nimport { useSelector, useDispatch, useStore } from 'react-redux';\n\nexport const SearchbarComponent = () => {\n\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst searchTerm = e.target.children[0].value\n\n\t\tif(searchTerm.length === 0 || searchTerm === '' || searchTerm === 'undefined'){\n\t\t\treturn\n\t\t}\n\n\t\te.target.children[0].value = '';\n\t\tdispatch({type: 'CLOSE_SEARCHBAR' });\n\n\t\tdispatch({type: 'SET_SEARCH_TERM', payload: searchTerm });\n\n\t\tconsole.log('STORE:', store.getState(), currentApp);\n\t}\n\n\n\n\n\n\tconst store = useStore();\n\tconst dispatch = useDispatch();\n\tconst searchOpen = useSelector(state => state.searchbar.opened);\n\tconst classNameA =  searchOpen ? 'search search-open' : 'search'\n\tconst currentApp = useSelector(state => state.app.currentApp);\n\tconst color = useSelector(state => state.app.appsList[currentApp].color);\n\tconst className = `${color} darken-3 search-bar`\n\n\treturn (\n      <div className={classNameA}  >\n        <div className={className}>\n          <div className=\"container\">\n            <form onSubmit={ handleSubmit }>\n              <input className=\"searchbar-input\" type='text' name='input-search' placeholder=\"Enter search term\" />\n              <button>  <i className=\"material-icons waves-effect  waves-light\">search</i></button>\n            </form>\n          </div>\n        </div>\n      </div>\n\t)\n}\n\n\n/*\nrationale: - enter a term, console log it, put it into url, fetch the url...\n\n\n\n\n\n\n\n\n*/\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { SearchbarComponent } from './SearchbarComponent'\nimport { useSelector, useDispatch/*, useStore*/ } from 'react-redux';\n\nconst Navbar = () => {\n\n\t/// Access store items.\n  const dispatch = useDispatch();\n  //const store = useStore();\n  const App = useSelector(state => state.app);\n  const currentApp = App.currentApp;\n  const storeNavItems = App.appsList[currentApp].navItems;\n\n\t/// Actions\n  const navMenuAction = (data, currentApp) => {\n\t\treturn { type:'CHANGE_APP_STATE', payload: null }\n\t}\n  const showSearchBar = () => {\tdispatch(toggleSearchBar())\t}\n  const toggleCartAction = () => { return { type: 'TOGGLE_CARTOPEN' } }\n  const toggleSearchBar = () => { return { type: 'TOGGLE_SEARCHBAR' } }\n  const closeSearchBar = () => {return { type: 'CLOSE_SEARCHBAR' } }\n  const openSearchBar = () => { return { type: null } }\n  const saveScrollPos = (scrollPos) => {\n\t\t/// Preserving the scroll position for when you return to this page...\n\t\treturn { type: 'SAVE_SCROLL_POS', payload:{scrollPos, currentApp:App.currentApp} }\n\t}\n\n\t/// Fired 'on load' of page.\n\tuseEffect(() => {\n\t\t/// NB: this function fires *after* the new page has loaded.\n\n\t\t/// Return to the scroll position that has been saved for this page.\n\t\tconst sp = App.appsList[App.currentApp].scrollPos\n\t\tconst scrollPosition = (sp) ? sp : 0;\n\n\t\t/// For the 'next' pages.\n\t\tconst d = document.querySelector('#Display');\n\t\td.style.top = '0'\n\t\twindow.scrollTo(0, scrollPosition);\n\t\t//window.scrollTo({ top: scrollPosition, left: 0, behavior: 'smooth' });\n\n\t\t/// A little frivolity - has no effect on mobile.\n\t\tdocument.title = App.currentApp;\n  }, [App]);\n\n\t/// User interaction actions.\n  const addMenuBtn = (item, currentApp) => {\n\n\t\t/// Make your 'on exit' (ie. before exiting) changes/actions here.\n\t\t/// And then 'post' changes (ie. at arrived page / on arrival) actions in \"useEffect(() => { ...\"\n\n\t\t/// 'Preserve' the scroll position for when you return to this page.\n\t\tdispatch(saveScrollPos(window.scrollY))\n\n    // Close searchbar unless next item is reddit\n    const appsArray = App.apps;\n\t\tif(appsArray[appsArray.indexOf(currentApp) + 1] !== 'reddit'){\n\t\t\tdispatch(closeSearchBar())\n\t\t} else {\n\t\t\tdispatch(openSearchBar())\n\t\t}\n\t\tdispatch(navMenuAction(item, currentApp))\n\t\t//console.log('STORE:',store.getState());\n\t}\n  const iconButton = (fn, icon, index) => {\n    return (\n      <span key={index} className=\"right white-text\"  onClick={ fn }  >\n        <i className=\"material-icons waves-effect  waves-light\">{ icon }</i>\n      </span>\n    )\n  }\n  const navItems = storeNavItems && storeNavItems.map((navItem, i) => {\n    if ((typeof navItem) === 'object'){\n      const {icon} = navItem\n      let fn\n      switch(icon){\n        case 'menu':\n          fn = addMenuBtn\n          break\n        case 'shopping_cart':\n          fn = toggleCartAction\n          break\n        case 'search':\n          fn = showSearchBar\n          break\n        default:\n          fn = null\n        }\n      return  iconButton(fn, icon, i)\n    }\n    return <li key={i}><NavLink to=\"/\">{ navItem }</NavLink></li>\n  });\n\tconst color = App.appsList[currentApp].color;\n\tconst className = `nav-wrapper ${color} darken-3`\n\n  /// Return the component.\n  return(\n    <section id='Navbar'>\n      <nav className={ className } >\n        <div className=\"container\">\n          <Link className=\"brand-logo\" to=\"/\">{ currentApp }</Link>\n          <ul className=\"right\">\n            { navItems }\n          </ul>\n\n        </div>\n      </nav>\n      <SearchbarComponent />\n    </section>\n    )\n}\n\nexport default Navbar\n\n\n\n\n","//export const REQUEST_DATA = 'REQUEST_DATA'; // action to represent waiting for response\n//export const GET_DATA_FIRST = 'GET_DATA_FIRST'; // action to represent receiving of data\n\n\n//export const requestData = () => ({ type: 'REQUEST_DATA' });\n\n//export const getDataFirst = myData => ({ type: 'GET_DATA_FIRST', myData:myData });\n//const getDataFirst = function(myData){\n\t//return ({ type: 'GET_DATA_FIRST', myData:myData })\n//}\n\n\n\n\n\n/// This action fires upon data having been retrieved,\n/// and is handled in fetchReducer.js\nconst dataReceived = (data) => {\n\t// the function is returning an ACTION\n\treturn ({ type: 'DATA_RECEIVED', payload: data })\n}\n\n/// This action is fired upon data retrieval having failed,\n/// and is handled in fetchReducer.js\nconst getDataFailed = (error) => {\n\treturn ({ type: 'DATA_REQUEST_ERROR', payload: error })\n}\n\n\n\n/// Only this function is exported (but makes use of getData())\nexport const fetchData = (URL = null) => dispatch => {\n\n  // made a request to fetch data..\n  dispatch( () => ({ type: 'DATA_REQUEST_IN_PROGRESS' }) );\n\n  // request has returned, failedly or succesfully.\n  return getData(URL)\n\t  .then((data) => {\n\t\t\tif(data[0] === 'Error fetching data:'){\n\t\t\t\t// ['Error fetching data:', error]\n\t\t\t\treturn dispatch( getDataFailed(data[1]) )\n\t\t\t} else {\n\t      return dispatch( dataReceived(data) )\n\t\t\t}\n\t  })\n\t  .then((res) => {\n\t\t\tif(res.type === 'DATA_RECEIVED'){\n\t\t\t\tdispatch({ type: 'APP_GOT_DATA', payload: res.payload } );\n\t\t\t}\n\t\t\tif(res.type === 'DATA_REQUEST_ERROR'){\n\t\t\t\tdispatch({ type: 'APP_GOT_DATA', payload: 'Error' } );\n\t\t\t}\n\t\t});\n};\n\nconst getData = async (URL) => {\n\n\t  URL = URL ? URL : '/itemsData.json'\n\n\t\ttry {\n\t\t\tlet result = await fetch(URL);\n\t\t\tlet data = await result.json();\n\t\t\tlet products = data.items;\n\t\t\t/// The retrieved data has to be destructured\n\t\t\t/// incoming json made sense of for current application.\n\t\t\tproducts = products.map(item => {\n\t\t\t\tconst {title, price} = item.fields;\n\t\t\t\tconst {id} = item.sys;\n\t\t\t\tconst image = item.fields.image.fields.file.url;\n\t\t\t\treturn {title, price, id, image}\n\t\t\t});\n\t\t\treturn products;\n\t\t} catch (error){\n\t\t\treturn (['Error fetching data:', error]);\n\t\t}\n\n\t/// Above and below are equivalent: top uses async/await(better), bottom uses ..then\n\n  //return fetch('http://localhost/itemsData.php').then(res => {\n\t\t //return res.json()\n\t//}).then(json => {\n\t\t //let products = json.items;\n\t\t //products = products.map(item => {\n\t\t    //const {title, price} = item.fields;\n\t\t\t  //const {id} = item.sys;\n\t\t\t  //const image = item.fields.image.fields.file.url;\n\t\t\t  //return {title, price, id, image}\n\t\t //})\n\t\t//return products\n\t//}).catch(error => {\n\t\t //return ('Error fetching data: ', error)\n\t//});\n}\n\n\nexport const myFetcher = async(URL = null, dispatch, delay = null) =>  {\n\n\tURL = URL ? URL : '/itemsData.json'\n\n\n\n\t// playing around with delay only in dev.\n\tconst fetcher = async() => {\n    try{\n\t    const res = await fetch(URL, {})\n\t    const resjson = await res.json()\n\t\t  dispatch({ type: 'APP_GOT_DATA', payload: resjson } );\n\t\t} catch (error){\n\t\t\tdispatch({ type: 'APP_GOT_DATA', payload: 'Error' } );\n\t\t}\n\t}\n\n\tif(delay){\n\t\tsetTimeout( ()=>{ fetcher() }, delay)\n\t} else {\n\t\tfetcher();\n\t}\n\n\t//setTimeout(async()=>{\n    //try{\n\t    //const res = await fetch(URL, {})\n\t    //const resjson = await res.json()\n\t\t  //dispatch({ type: 'APP_GOT_DATA', payload: resjson } );\n\t\t//} catch (error){\n\t\t\t//dispatch({ type: 'APP_GOT_DATA', payload: 'Error' } );\n\t\t//}\n\t//}, 5000);\n}\n\nexport default myFetcher\n\n\n\t/// Preservation\n\t///// Fetcher\n  //const fetchData = async () => {\n\t\t//setTimeout(async()=>{\n\t    //try{\n\t\t    //const res = await fetch(URL, {})\n\t\t    //const resjson = await res.json()\n\t\t\t  //dispatch({ type: 'APP_GOT_DATA', payload: resjson } );\n\t\t\t//} catch (error){\n\t\t\t\t//dispatch({ type: 'APP_GOT_DATA', payload: 'Error' } );\n\t\t\t//}\n\t\t//}, 5000);\n\t//}\n","import React/*, { useEffect }*/ from 'react';\nimport { useSelector, useDispatch/*, useStore*/ } from 'react-redux';\nimport { myFetcher } from './fetchAction';\n\nconst ChilliHotComponent = () => {\n\nconst App = useSelector(state => state);\nconsole.log(App)\n\n\n\n\n\t/// Variables\n\tconst URL = 'http://localhost:2000/itemsData.php'\n\tconst currentApp = useSelector(state => state.app.currentApp);\n\tconst dispatch = useDispatch();\n\tconst hasData = useSelector(state => state.app.appsList[currentApp].hasData);\n\n\tif(!hasData){\n\t\t//console.log('no data - must fetch:', hasData);\n\t\tmyFetcher(URL, dispatch)\n\t} else {\n\t\tconsole.log('have data ok:', hasData);\n\t}\n\n\n\t/// Prepare component content.\n\tlet itemsList = [];\n\tif(hasData && hasData !== 'Error'){\n\t\titemsList = hasData.items.map((item, i) => {\n\t\t//itemsList = hasData.hits.map((item, i) => {\n\t\t\treturn (<div key={i} className='gallery-box'>{item.fields.title}</div>)\n\t\t\t//return (<div key={i} className='gallery-box'>\n\t\t\t//{item.title}<br />\n\t\t\t//{item.created_at} <br />\n\t\t\t//{item.author} <br />\n\t\t\t//<a href={item.url}>{item.url}</a><br />\n\t\t\t//</div>)\n\t\t});\n\t} else if(hasData && hasData === 'Error'){\n\t\t/** in here - load dummy data? */\n\t\titemsList = [ (<div key='0'>There was an error getting data.</div>) ]\n\t} else {\n\t\titemsList = [ (<div key='0'>Loading... Please wait</div>) ]\n\t}\n\n\n\t/// Return component.\n\tconst className = (hasData && hasData === 'Error') ? '' : 'container-center' ;\n\treturn (<div id='chilli' className={className}>\n\t\t\t{ itemsList }\n\t\t</div>)\n}\n\nexport default ChilliHotComponent\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { myFetcher } from './fetchAction';\n\nconst HackerNewsComponent = () => {\n\n\t/// Variables\n\tconst dispatch = useDispatch();\n\tconst currentApp = useSelector(state => state.app.currentApp);\n\tconst hasData = useSelector(state => state.app.appsList[currentApp].hasData);\n\n\tconst baseURL = useSelector(state => state.app.appsList[currentApp].baseURL);\n\tconst searchTerm = useSelector(state => state.app.appsList[currentApp].searchTerm);\n\n\tif(!searchTerm){\n\n\t\tconst openSearchBar = () => {\n\t\t\tdispatch({ type: 'TOGGLE_SEARCHBAR' });\n\t\t}\n\n\t\treturn (<div id='hackerApi' className=''>\n\t\t\t\t\t\t\tPlease choose a topic to search for <button onClick={openSearchBar}>Choose a Topic</button>\n\t\t\t\t\t</div>)\n\t}\n\n\tconst isOnline = (!navigator.onLine) ? false : true;\n\tconst URL = (isOnline) ? `${baseURL}${searchTerm}` : 'http://localhost:2000/HackerNewsApi.php'\n\n\tif(!hasData){\n\t\tmyFetcher(URL, dispatch)\n\t}\n\n\n\t/// Prepare component content.\n\tlet itemsList = [];\n\tif(hasData && hasData !== 'Error'){\n\n\t\t/// Sort items by date.\n\t\tconst sortedItems =  hasData.hits.sort((a, b) => parseInt(b.created_at) - parseInt(a.created_at));\n\n\t\titemsList = sortedItems.map((item, i) => {\n\n\t\t\t/// Format the date\n\t\t\tconst d = new Date(item.created_at)\n\t\t\tconst dtf = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit' })\n\t\t\tconst [{ value: mo },,{ value: da },,{ value: ye }] = dtf.formatToParts(d)\n\t\t\tconst formattedDate = `${ye}-${mo}-${da}`\n\n\t\t\t/// Return an array item with the appropriate content.\n\t\t\treturn (<div key={i} className='hackerApi-box'>\n\t\t\t\t<div className='title'>{item.title}</div>\n\t\t\t\t<div className='date'>{formattedDate}</div>\n\t\t\t\t<div className='author'>Author: {item.author}</div>\n\t\t\t\t<a href={item.url}>{item.url}</a><br />\n\t\t\t\t</div>)\n\t\t});\n\n\t} else if(hasData && hasData === 'Error'){\n\t\t/** in here - load dummy data? */\n\t\titemsList = [ (<div key='0'>There was an error getting data.</div>) ]\n\t} else {\n\t\titemsList = [ (<div key='0'>Loading... Please wait</div>) ]\n\t}\n\n\n\t/// Return component.\n\tconst className = (hasData && hasData === 'Error') ? '' : 'container-centerX' ;\n\treturn (<div id='hackerApi' className={className}>\n\t\t\t{ itemsList }\n\t\t</div>)\n}\n\nexport default HackerNewsComponent\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { myFetcher } from './fetchAction';\n\nconst RedditComponent = () => {\n\n\t/// Variables\n/*\n\t//const subreddit = 'turkey'\n\t//const RedditApi = `https://www.reddit.com/r/${subreddit}.json`;\n\tconst RedditApi = 'http://localhost:2000/reddit-turkey.php'\n\n\n\tconst URL = RedditApi;\n\tconst currentApp = useSelector(state => state.app.currentApp);\n\tconst dispatch = useDispatch();\n\tconst hasData = useSelector(state => state.app.appsList[currentApp].hasData);\n\n\tif(!hasData){\n\t\tmyFetcher(URL, dispatch)\n\t}\n\n*/\n\n\t/// Variables\n\tconst dispatch = useDispatch();\n\tconst currentApp = useSelector(state => state.app.currentApp);\n\tconst hasData = useSelector(state => state.app.appsList[currentApp].hasData);\n\n\tconst baseURL = useSelector(state => state.app.appsList[currentApp].baseURL);\n\tconst searchTerm = useSelector(state => state.app.appsList[currentApp].searchTerm);\n\n\tif(!searchTerm){\n\n\t\tconst openSearchBar = () => {\n\t\t\tdispatch({ type: 'TOGGLE_SEARCHBAR' });\n\t\t}\n\n\t\treturn (<div id='hackerApi' className=''>\n\t\t\t\t\t\t\tPlease choose a topic to search for <button onClick={openSearchBar}>Choose a Topic</button>\n\t\t\t\t\t</div>)\n\t}\n\n\tconst isOnline = (!navigator.onLine) ? false : true;\n\tconst URL = (isOnline) ? `${baseURL}${searchTerm}.json` : 'http://localhost:2000/reddit-turkey.php'\n\n\tif(!hasData){\n\t\tmyFetcher(URL, dispatch)\n\t} else {\n\t\tconsole.log('URL:',URL,' hasData',hasData);\n\t}\n\n\n\t/// Prepare component content.\n\tlet itemsList = [];\n\tif(hasData && hasData !== 'Error'){\n\n\t\tif(!hasData.data){\n\t\t\titemsList = [ (<div key='0'>reddit no like<br /></div>) ]\n\t\t}\n\t\telse if(!hasData.data.children){\n\t\t\titemsList = [ (<div key='0'>reddit no like<br /></div>) ]\n\t\t} else {\n\n\t\t\t/// Sort items by date.\n\t\t\tconst sortedItems =  hasData.data.children.sort((a, b) => parseInt(b.data.created) - parseInt(a.data.created));\n\n\t\t\titemsList = sortedItems.map((item, i) => {\n\n\t\t\t\t/// Format the date\n\t\t\t\tconst d =  new Date(item.data.created * 1000);\n\t\t\t\tconst dtf = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit' })\n\t\t\t\tconst [{ value: mo },,{ value: da },,{ value: ye }] = dtf.formatToParts(d)\n\t\t\t\tconst formattedDate = `${ye}-${mo}-${da}`\n\n\t\t\t\t/// Return an array item with the appropriate content.\n\t\t\t\treturn (<div key={i} className='hackerApi-box'>\n\t\t\t\t\t<div className='title'>{item.data.title}</div>\n\t\t\t\t\t<div className='date'>{formattedDate}</div>\n\t\t\t\t\t<div className='author'>Author: {item.data.author}</div>\n\t\t\t\t\t<a href={item.data.url}>{item.data.url}</a><br />\n\t\t\t\t\t</div>)\n\t\t\t});\n\n\t\t}\n\n\n\n\t} else if(hasData && hasData === 'Error'){\n\t\t/** in here - load dummy data? */\n\t\titemsList = [ (<div key='0'>There was an error getting data.</div>) ]\n\t} else {\n\t\titemsList = [ (<div key='0'>Loading... Please wait</div>) ]\n\t}\n\n\n\t/// Return component.\n\tconst className = (hasData && hasData === 'Error') ? '' : 'container-centerX' ;\n\treturn (<div id='hackerApi' className={className}>\n\t\t\t{ itemsList }\n\t\t</div>)\n}\n\nexport default RedditComponent\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ChilliHotComponent from './ChilliHotComponent';\nimport HackerNewsComponent from './HackerNewsComponent';\nimport RedditComponent from './RedditComponent';\n\nconst Display = () => {\n\n\tconst currentApp = useSelector(state => state.app.currentApp);\n\n\tif(currentApp === 'reddit'){\n\t\treturn (<div id='Display' className='container'>\n\t\t\t\t<RedditComponent />\n\t\t\t</div>)\n\t}\n\n\tif(currentApp === 'Hacker News'){\n\t\treturn (<div id='Display' className='container'>\n\t\t\t\t<HackerNewsComponent />\n\t\t\t</div>)\n\t}\n\n\tif(currentApp === 'Chilli Hot'){\n\t\treturn (<div id='Display' className='container'>\n\t\t\t\t<ChilliHotComponent />\n\t\t\t</div>)\n\t}\n\n\tif(currentApp === 'Tester'){\n\n\t\t/// Click action on buttons for fonts sizes\n\t\tconst handlePlus = (e) => {\n\t\t\tconsole.log(e.target.innerHTML, window.innerWidth, window.innerHeight);\n\t\t\tconst el = e.target.innerHTML\n\n\t\t\tconst w = window.innerWidth\n\t\t\tconst h = window.innerHeight\n\t\t\tlet f = parseInt(window.getComputedStyle(document.querySelector('.brand-logo')).fontSize);\n\t\t\tlet i = parseInt(window.getComputedStyle(document.querySelector('nav i')).fontSize);\n\t\t\tf = parseInt(f)\n\t\t\tf = (el === 'increase font size') ? parseInt(f + 2) : parseInt(f - 2)\n\t\t\ti = (el === 'increase font size') ? parseInt(i + 1) : parseInt(i - 1)\n\t\t\tdocument.querySelector('.brand-logo').style.fontSize = f + 'px'\n\t\t\tdocument.querySelector('nav i').style.fontSize = i + 'px'\n\n\t\t\tdocument.querySelector('.readout').innerHTML = `Screen Width(px): ${w}<br /> Screen Height(px): ${h}<br /> Logo font(px): ${f}<br /> Icon font(px): ${i}<br />`;\n\t\t}\n\n\t\treturn (\n\t\t\t<div id='Display' className='container'>\n\t\t\t\t<div id='tester'>\n\t\t\t\t\t<button  onClick={handlePlus}>increase font size</button><br />\n\t\t\t\t\t<button  onClick={handlePlus}>decrease font size</button><br />\n\t\t\t\t\t<div className='readout'></div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\n\t/// Return default (empty) component.\n\treturn (<div id='Display' className='container'>   </div>)\n}\n\nexport default Display\n\n\n","import React from 'react';\n//import { useSelector } from 'react-redux';\nimport logo from './whatsapp.svg';\n\nconst Footer = () => {\n\n    //const App = useSelector(state => state.app);\n    //const currentApp = App.currentApp;\n\t\t//const color = App.appsList[currentApp].color; \n\tconst className = `page-footer  black darken-3`\n\n\treturn (\n\t\t<section id='Footer' className={className}>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>© 2020 Carefree-Coding Pendik/Istanbul</div>\n\t\t\t\t<div><img src={logo} className=\"App-logo\" alt=\"logo\" /> + 90 (0)532 123 4567</div>\n\t\t\t</div>\n\t\t</section>\n\t)\n}\n\nexport default Footer\n","import React/*, { useEffect }*/ from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from \"./Navbar\";\nimport Display from \"./Display\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n\t\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Display} />\n        </Switch> \n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//import authReducer from './authReducer'\n//import projectReducer from './projectReducer'\n//import appReducer from './appReducer'\n//import app2Reducer from './app2Reducer'\n//import navReducer from './navReducer'\nimport { combineReducers } from 'redux'\n\n\n/// App reducer\nfunction saveScrollPosition(state, action) {\n\n  /// Update an app to store its scrollPos.\n  return {\n    ...state,\n    appsList: {\n      ...state.appsList,\n      [action.payload.currentApp]: {\n        ...state.appsList[action.payload.currentApp],scrollPos: action.payload.scrollPos\n      }\n    }\n  }\n}\nfunction updateAppOnDataReceived(state, action, currentApp){\n\n\t/// Update an app to have the data it received from a fetch.\n  return {\n    ...state,\n    appsList: {\n      ...state.appsList,\n      [currentApp]: {\n        ...state.appsList[currentApp], hasData: action.payload\n      }\n    }\n  }\n\n}\nconst updateAppSearchTerm = (state, action, currentApp) => {\n  return {\n    ...state,\n    appsList: {\n      ...state.appsList,\n      [currentApp]: {\n        ...state.appsList[currentApp], searchTerm: action.payload,  hasData: false\n      }\n    }\n  }\n\n}\n\nconst initialAppState = {\n    currentApp: 'Chilli Hot',\n\t\tapps:['Chilli Hot','reddit',  'Hacker News', 'Tester', 'Contact', 'Shopping'],\n    current: 0,\n    appsList:{\n\t\t\t\"Chilli Hot\": {\n\t\t\t\tcolor:'red',\n\t\t\t\tnavItems:['n1', 'n2',  {icon:'menu'}, {icon:'shopping_cart'}, {icon:'search'}],\n\t\t\t\thasData:false,\n\t\t\t\tbaseURL: false,\n\t\t\t\tsearchTerm: null\n\t\t\t\t},\n\t\t\t\"reddit\": {color:'blue', navItems:[{icon:'menu'}, {icon:'search'}], hasData:false, baseURL: 'https://www.reddit.com/r/', searchTerm: null},\n\t\t\t\"Hacker News\": {color:'green', navItems:[{icon:'menu'}, {icon:'search'}], hasData:false, baseURL: 'https://hn.algolia.com/api/v1/search?query=', searchTerm: null},\n\t\t\t\"Shopping\": {color:'yellow', navItems:[{icon:'menu'}, {icon:'shopping_cart'}], hasData:false, baseURL: false, searchTerm: null},\n\t\t\t\"Contact\": {color:'grey', navItems:[ {icon:'menu'},{icon:'email'}, {icon:'phone'} ], hasData:false, baseURL: false, searchTerm: null},\n\t\t\t\"Tester\": {color:'black', navItems:[ {icon:'menu'} ], hasData:false, baseURL: false, searchTerm: null},\n\t\t}\n};\nconst appReducer = (state = initialAppState, action) => {\n    switch (action.type) {\n\t\t\tcase 'CHANGE_APP_STATE':\n\t\t\t\tconst nextAppIndex = (state.current === state.apps.length - 1) ? 0 : state.current + 1\n\t\t\t\tconst nextApp = (action.payload) ? action.payload : state.apps[nextAppIndex]\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcurrentApp: nextApp,\n\t\t\t\t\tcurrent: nextAppIndex\n\t\t\t\t};\n\t\t\tcase 'SAVE_SCROLL_POS':\n\t\t\t\treturn saveScrollPosition(state, action)\n\t\t\tcase 'APP_GOT_DATA':\n\t\t\t\treturn updateAppOnDataReceived(state, action, state.currentApp)\n\t\t\tcase 'SET_SEARCH_TERM':\n\t\t\t\treturn updateAppSearchTerm(state, action, state.currentApp)\n\t\t\tdefault:\n\t\t\t\treturn state;\n    }\n};\n\n/// SearchbarComponent reducer\nconst initialSearchState = {opened:false, currentSearchTerm:''}\nconst searchReducer = (state = initialSearchState, action) => {\n\tswitch(action.type){\n\t\tcase 'TOGGLE_SEARCHBAR':\n\t\t\tconst opened = !state.opened\n\t\t\treturn {opened, currentSearchTerm:state.currentSearchTerm }\n\t\tcase 'CLOSE_SEARCHBAR':\n\t\t\treturn {...state, opened:false}\n\t\tcase 'OPEN_SEARCHBAR':\n\t\t\treturn {...state, opened:true}\n\t\tcase 'SEARCH_TERM_SELECTED':\n\t\t   return {opened:state.opened, currentSearchTerm: action.payload }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n/// Fetch reducer\nconst initialFetchState = { isFetching: false, data: [], error: false };\nconst fetchReducer = (state = initialFetchState, action) => {\n\tswitch(action.type){\n\n\t\t/// Data has been requested, waiting\n\t\tcase 'DATA_REQUEST_IN_PROGRESS':\n      return { ...state, isFetching: true };\n\n\t\t/// Data has been retrieved (up to caller to destructure received data (<< not accurate))\n\t\tcase 'DATA_RECEIVED':\n      return { ...state, isFetching: false, data: action.payload, error: false };\n\n\t\t/// Data request has completed with error/failure\n\t\tcase 'DATA_REQUEST_ERROR':\n\t\t\t return {...state, isFetching: false, error: action.payload}\n\n\t\tdefault:\n\t\t\t return state;\n\t}\n}\n\n\n\nconst rootReducer = combineReducers({\n\t//auth: authReducer,\n\t//project: projectReducer,\n\t//nav: navReducer,\n\tapp: appReducer,\n\t//app2: app2Reducer,\n\tsearchbar: searchReducer,\n\tfetch: fetchReducer\n\t//cartOpen:cartReducer\n});\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render( <Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n//window.addEventListener('scroll', function(e) {\n  ////let last_known_scroll_position = window.scrollY;\n  ////const n = document.querySelector('#Navbar');\n  ////console.log(window.getComputedStyle( n.children[0] ,null).getPropertyValue('top'));\n\n//});\n"],"sourceRoot":""}