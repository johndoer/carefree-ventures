{"version":3,"sources":["whatsapp.svg","SearchbarComponent.js","Navbar.js","Display.js","Footer.js","App.js","serviceWorker.js","rootReducer.js","index.js"],"names":["module","exports","SearchbarComponent","store","useStore","dispatch","useDispatch","classNameA","useSelector","state","searchbar","opened","currentApp","app","color","appsList","className","onSubmit","e","preventDefault","type","payload","target","children","value","console","log","getState","name","placeholder","Navbar","App","storeNavItems","navItems","showSearchBar","toggleSearchBar","toggleCartAction","addMenuBtn","item","appsArray","apps","indexOf","map","navItem","i","fn","icon","index","key","onClick","iconButton","to","id","Display","handlePlus","innerHTML","window","innerWidth","innerHeight","el","w","h","f","parseInt","getComputedStyle","document","querySelector","fontSize","style","itemsList","push","Footer","src","logo","alt","exact","path","component","Boolean","location","hostname","match","initialState","current","initialSearchState","currentSearchTerm","rootReducer","combineReducers","action","nextAppIndex","length","nextApp","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.172cbd3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whatsapp.2cc4c3e7.svg\";","import React from 'react';\nimport { useSelector, useDispatch, useStore } from 'react-redux';\n\nexport const SearchbarComponent = () => {\n\n    const searchTermSubmit = (searchTerm) => {\n        return { type:'SEARCH_TERM_SELECTED', payload: searchTerm }\n    }\t\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(searchTermSubmit(e.target.children[0].value))\n\t\te.target.children[0].value = ''\n\t\tconsole.log('STORE:',store.getState());\n\t}\t\n\n\tconst store = useStore();\n\tconst dispatch = useDispatch();\t\n\tconst searchOpen = useSelector(state => state.searchbar.opened);\n\tconst classNameA =  searchOpen ? 'search search-open' : 'search' \n\tconst currentApp = useSelector(state => state.app.currentApp); \n\tconst color = useSelector(state => state.app.appsList[currentApp].color);  \n\tconst className = `${color} darken-3 search-bar`\n\n\treturn (\n      <div className={classNameA}  >\n        <div className={className}>\n          <div className=\"container\">\n            <form onSubmit={ handleSubmit }>\n              <input className=\"searchbar-input\" type='text' name='input-search' placeholder=\"Enter search term\" />\n              <button>  <i className=\"material-icons waves-effect  waves-light\">search</i></button>\n            </form>\n          </div>\n        </div>\n      </div> \n\t)\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { SearchbarComponent } from './SearchbarComponent'\nimport { useSelector, useDispatch, useStore } from 'react-redux';\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const store = useStore();\n  \n  const App = useSelector(state => state.app);\n  const currentApp = App.currentApp;\n  const storeNavItems = App.appsList[currentApp].navItems; \n\n  const navMenuAction = (data, currentApp) => { \n\t\treturn { type:'CHANGE_APP_STATE', payload: null }\n\t}\n  const showSearchBar = () => {\tdispatch(toggleSearchBar())\t}\t\n  const toggleCartAction = () => { return { type:'TOGGLE_CARTOPEN' } }\n  const toggleSearchBar = () => { return { type:'TOGGLE_SEARCHBAR' } }\n  const closeSearchBar = () => {return { type:'CLOSE_SEARCHBAR' } }\n  const openSearchBar = () => { return { type: null } }\n  const addMenuBtn = (item, currentApp) => {\n    // Close searchbar unless next item is reddit\n    const appsArray = App.appsList.apps;\n\t\tif(appsArray[appsArray.indexOf(currentApp) + 1] !== 'reddit'){\n\t\t\tdispatch(closeSearchBar())\n\t\t} else {\n\t\t\tdispatch(openSearchBar())\n\t\t}\n\t\tdispatch(navMenuAction(item, currentApp))\n\t\tconsole.log('STORE:',store.getState());\n\t}  \n  const iconButton = (fn, icon, index) => { \n    return (\n      <span key={index} className=\"right white-text\"  onClick={ fn }  >\n        <i className=\"material-icons waves-effect  waves-light\">{ icon }</i>\n      </span>\n    )\n  }\n  const navItems = storeNavItems && storeNavItems.map((navItem, i) => {\n    if ((typeof navItem) === 'object'){\n      const {icon} = navItem\n      let fn\n      switch(icon){\n        case 'menu':\n          fn = addMenuBtn\n          break\n        case 'shopping_cart':\n          fn = toggleCartAction\n          break\n        case 'search':\n          fn = showSearchBar\n          break\n        default:\n          fn = null\n        }\n      return  iconButton(fn, icon, i)\n    } \n    return <li key={i}><NavLink to=\"/\">{ navItem }</NavLink></li>\n  });\n\tconst color = App.appsList[currentApp].color; \n\tconst className = `nav-wrapper ${color} darken-3`\n  \n  // Return the component.\n  return(\n    <section id='Navbar'>\n      <nav className={ className } >\n        <div className=\"container\">\n          <Link className=\"brand-logo\" to=\"/\">{ currentApp }</Link>\n          <ul className=\"right\">\n            { navItems }\n          </ul>\n      \n        </div>\n      </nav> \n      <SearchbarComponent />\n    </section>\n    )\t\n}\n\nexport default Navbar\n\n\n\n\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst Display = () => {\n\t\n\tconst App = useSelector(state => state.app);\n\tconst currentApp = App.currentApp;\t\n\n\tconst handlePlus = (e) => {\n\t\tconsole.log(e.target.innerHTML, window.innerWidth, window.innerHeight);\n\t\tconst el = e.target.innerHTML\n\t\t\n\t\tconst w = window.innerWidth\n\t\tconst h = window.innerHeight\n\t\tlet f = parseInt(window.getComputedStyle(document.querySelector('.brand-logo')).fontSize);\n\t\tlet i = parseInt(window.getComputedStyle(document.querySelector('nav i')).fontSize);\n\t\tf = parseInt(f)\t\t\n\t\tf = (el === 'increase font size') ? parseInt(f + 2) : parseInt(f - 2)\n\t\ti = (el === 'increase font size') ? parseInt(i + 1) : parseInt(i - 1)\n\t\tdocument.querySelector('.brand-logo').style.fontSize = f + 'px'\t\n\t\tdocument.querySelector('nav i').style.fontSize = i + 'px'\t\n\n\t\tdocument.querySelector('.readout').innerHTML = `Screen Width(px): ${w}<br /> Screen Height(px): ${h}<br /> Logo font(px): ${f}<br /> Icon font(px): ${i}<br />`;\n\t}\n\t\n\n\tconst itemsList = [];\n\tif(currentApp === 'Chilli Hot'){\n\t\tfor(let i=0; i<24; i++){\n\t\t\titemsList.push ((<div key={i} className='gallery-box'></div>))\n\t\t}\t\t\t\n\t}\n\t\n\tif(currentApp === 'Tester'){\n\t\treturn (\n\t\t\t<div id='Display' className='container'> \n\t\t\t\t<div id='tester'>\n\t\t\t\t\t<button  onClick={handlePlus}>increase font size</button><br />\n\t\t\t\t\t<button  onClick={handlePlus}>decrease font size</button>\n\t\t\t\t\t<div className='readout'></div>\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t\n\treturn <div id='Display' className='container'>         \n            { itemsList }\n        </div>\n\n}\n\nexport default Display\n\n\n","import React from 'react';\n//import { useSelector } from 'react-redux';\nimport logo from './whatsapp.svg';\n\nconst Footer = () => {\n\n    //const App = useSelector(state => state.app);\n    //const currentApp = App.currentApp;\n\t\t//const color = App.appsList[currentApp].color; \n\tconst className = `page-footer  black darken-3`\n\n    return (\n        <section id='Footer' className={className}>\n            <div className=\"container\">\n                <div>© 2020 Carefree-Coding Pendik/Istanbul</div>\n                <div><img src={logo} className=\"App-logo\" alt=\"logo\" /> + 90 (0)532 123 4567</div>\n            </div>\n        </section>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from \"./Navbar\";\nimport Display from \"./Display\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Display} />\n        </Switch> \n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//import authReducer from './authReducer'\n//import projectReducer from './projectReducer'\n//import appReducer from './appReducer'\n//import app2Reducer from './app2Reducer'\n//import navReducer from './navReducer'\n\nimport { combineReducers } from 'redux'\n\n\n// App reducer\nconst initialState = {\n    currentApp: 'Chilli Hot',\n    appsList:{\n\t\t\tapps:['Chilli Hot', 'Tester', 'Contact', 'reddit', 'app3', 'Shopping'], \n\t\t\t\"Chilli Hot\": {color:'red', navItems:['n1', 'n2', '3ccc', {icon:'menu'}, {icon:'shopping_cart'}, {icon:'search'}]},\n\t\t\t\"reddit\": {color:'blue', navItems:[{icon:'menu'}, {icon:'search'}]},\n\t\t\t\"app3\": {color:'green', navItems:[{icon:'menu'}]},\n\t\t\t\"Shopping\": {color:'yellow', navItems:[{icon:'menu'}, {icon:'shopping_cart'}]},\n\t\t\t\"Contact\": {color:'grey', navItems:[ {icon:'menu'},{icon:'email'}, {icon:'phone'} ]},\n\t\t\t\"Tester\": {color:'black', navItems:[ {icon:'menu'} ]},\n\t\t},\n    current: 0\n};\n   \nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'CHANGE_APP_STATE':\n            const nextAppIndex = state.current === state.appsList.apps.length - 1 ? 0 : state.current + 1\n            const nextApp = action.payload ? action.payload : state.appsList.apps[nextAppIndex]\n            return {\n                ...state,\n                currentApp: nextApp,\n                current:nextAppIndex\n            };\n        default:\n        return state;\n    }\n};\n\n\n// SearchbarComponent reducer\nconst initialSearchState = {opened:false, currentSearchTerm:''}\nconst searchReducer = (state = initialSearchState, action) => {\n\tswitch(action.type){\n\t\tcase 'TOGGLE_SEARCHBAR':\n\t\t\tconst opened = !state.opened\n\t\t\treturn {opened, currentSearchTerm:state.currentSearchTerm }\n\t\tcase 'CLOSE_SEARCHBAR':\n\t\t\treturn {...state, opened:false}\n\t\tcase 'OPEN_SEARCHBAR':\n\t\t\treturn {...state, opened:true}\n\t\tcase 'SEARCH_TERM_SELECTED':\n\t\t   return {opened:state.opened, currentSearchTerm:action.payload }\n\t\tdefault:\n\t\t\treturn state\t \t\t\n\t}\n}\n\n\nconst rootReducer = combineReducers({\n\t//auth: authReducer,\n\t//project: projectReducer,\n\t//nav: navReducer,\n\tapp: appReducer,\n\t//app2: app2Reducer,\n\tsearchbar: searchReducer,\n\t//cartOpen:cartReducer\n});\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render( <Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}